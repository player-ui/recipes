# @assets-plugin/{{kebabCase assetName}}

## Overview

`@assets-plugin/{{kebabCase assetName}}` is a component package designed to be leveraged by a [Player-UI assets plugin](https://player-ui.github.io/next/plugins).

It provides a [{{pascalCase assetName}}]([TODO: add link to storybook]) component that can be used to [TODO: define component features].

This package is part of a mono-repo built with Bazel, ensuring fast and reliable builds.

## Installation

To install `@assets-plugin/{{kebabCase assetName}}`, you can use pnpm or yarn:

```sh
pnpm i @assets-plugin/{{kebabCase assetName}}
```

or

```sh
yarn add @assets-plugin/{{kebabCase assetName}}
```

## Usage

You can leverage this asset through the `@assets-plugin/plugin`:

```ts
import { {{pascalCase assetName}} } from "@assets-plugin/plugin";

// and use it to define your Player-UI content:
myFlow = {
    id: 'my_flow',
    views: [
        <>
            <{{pascalCase assetName}} />
        </>
    ]
}
```

For more information on how to author Player-UI content using DSL, please check our [Player-UI docs](https://player-ui.github.io/next/dsl#tsxjsx-content-authoring-player-dsl).

Or, your can leverage this asset in your own plugin:

```ts
// TransformPlugin.ts
import type { Player, PlayerPlugin } from "@player-ui/player";
import { AssetTransformPlugin } from "@player-ui/asset-transform-plugin";
import { {{camelCase assetName}}Transform } from "@assets-plugin/{{kebabCase assetName}}";

export class TransformsPlugin implements PlayerPlugin {
  name = "my-plugin-transforms";

  apply(player: Player) {
    player.registerPlugin(
      new AssetTransformPlugin([
        [{ type: "{{kebabCase assetName}}" }, {{camelCase assetName}}Transform],
      ])
    );
  }
}
```

```ts
// AssetRegistryPlugin.ts
import React from "react";
import type { Player } from "@player-ui/player";
import type {
  ExtendedPlayerPlugin,
  ReactPlayer,
  ReactPlayerPlugin,
} from "@player-ui/react";
import { AssetProviderPlugin } from "@player-ui/asset-provider-plugin-react";
import { TransformsPlugin } from "./TransformPlugin";
import { {{pascalCase assetName}}Asset, {{pascalCase assetName}}Component } from "@assets-plugin/{{kebabCase assetName}}";

export class AssetsRegistryPlugin implements ReactPlayerPlugin, ExtendedPlayerPlugin<[{{pascalCase assetName}}Asset]> {
  name = "my-plugin";

  applyReact(reactPlayer: ReactPlayer) {
    reactPlayer.registerPlugin(
      new AssetProviderPlugin([
        ["{{kebabCase assetName}}", {{pascalCase assetName}}Component],
      ])
    );
  }

  apply(player: Player) {
    player.registerPlugin(new TransformsPlugin());
  }
}
```

{{!-- ## Contributing

We welcome contributions to `@assets-plugin/{{kebabCase assetName}}`! Please see the [CONTRIBUTING.md](TODO: link to the file) file for more information on how to contribute. --}}
